name: "Release"
on:
  release:
    types: [released]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Clean
        run: dotnet clean

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Pack
        run: dotnet pack --configuration Release

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ github.repository_owner }}.${{ github.event.repository.name }}/bin/Release"
          if-no-files-found: error

  add-to-release:
    needs: [build]
    name: Add assets to release
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Zip release assets
        uses: TheDoctor0/zip-release@0.4.1
        with:
          filename: release.zip
          path: "./netstandard2.0/publish"

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: "release.zip"
          asset_name: "${{ github.event.repository.name }}"
          asset_content_type: application/zip

  publish-nuget:
    needs: [build]
    name: Publish to NuGet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Publish project to NuGet
        run: dotnet nuget push '*.nupkg' -k ${{secrets.NUGET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Unlist alpha and beta packages on NuGet
        uses: darenm/unlist-nuget@v1
        with:
          NUGET_PACKAGE: ${{ github.event.repository.name }}
          VERSION_REGEX: (.*alpha.*)|(.*beta.*)
          NUGET_KEY: ${{secrets.NUGET_KEY}}

  publish-github:
    needs: [build]
    name: Publish to GitHub
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Authorize with Github Package Registry
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.event.repository_owner }}/index.json -n "github" -u "${{ github.event.repository_owner }}" -p "${{secrets.ADMIN_TOKEN}}"

      - name: Publish project to Github Package Registry
        run: dotnet nuget push '*.nupkg' -s github --skip-duplicate
